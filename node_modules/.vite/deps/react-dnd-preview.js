import {
  useDragLayer
} from "./chunk-GEE66JZQ.js";
import "./chunk-5SWDWV4L.js";
import {
  require_react
} from "./chunk-ZVMIEU5R.js";
import "./chunk-HK6JAH4S.js";
import {
  __toESM
} from "./chunk-UXIASGQL.js";

// node_modules/react-dnd-preview/dist/index.js
var import_react = __toESM(require_react());
var import_react2 = __toESM(require_react());
var import_react3 = __toESM(require_react());
var i = (t, e) => ({ x: t.x - e.x, y: t.y - e.y });
var a = (t) => {
  let e = t.getInitialClientOffset(), r = t.getInitialSourceClientOffset();
  return e === null || r === null ? { x: 0, y: 0 } : i(e, r);
};
var u = (t, e) => {
  let r = t.getClientOffset();
  if (r === null)
    return null;
  if (!e.current || !e.current.getBoundingClientRect)
    return i(r, a(t));
  let n = e.current.getBoundingClientRect(), o = { x: n.width / 2, y: n.height / 2 };
  return i(r, o);
};
var p = (t) => {
  let e = `translate(${t.x.toFixed(1)}px, ${t.y.toFixed(1)}px)`;
  return { pointerEvents: "none", position: "fixed", top: 0, left: 0, transform: e, WebkitTransform: e };
};
var l = () => {
  let t = (0, import_react2.useRef)(null), e = useDragLayer((r) => ({ currentOffset: u(r, t), isDragging: r.isDragging(), itemType: r.getItemType(), item: r.getItem(), monitor: r }));
  return !e.isDragging || e.currentOffset === null ? { display: false } : { display: true, itemType: e.itemType, item: e.item, style: p(e.currentOffset), monitor: e.monitor, ref: t };
};
var s = (0, import_react3.createContext)(void 0);
var x = (t) => {
  let e = l();
  if (!e.display)
    return null;
  let { display: r, ...n } = e, o;
  return "children" in t ? typeof t.children == "function" ? o = t.children(n) : o = t.children : o = t.generator(n), import_react.default.createElement(s.Provider, { value: n }, o);
};
export {
  s as Context,
  x as Preview,
  l as usePreview
};
//# sourceMappingURL=react-dnd-preview.js.map
